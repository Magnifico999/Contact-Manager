@page "/Contact/Edit/{Id}"
@using ContactBook.BlazorServer.EndPoints
@using BlazorInputFile
@inject IUpload _Upload
@inject IContactRepository _ContactRepository
@inject NavigationManager _Nav

<h2>EditContact</h2>
@if (int.Parse(Id) <1 || string.IsNullOrWhiteSpace(Id))
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>Something went wrong!</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
else if (contact == null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>Loading....</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
else
{
    <EditForm Model="contact" OnValidSubmit="HandleContactCreate">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="FirstName"> First Name</label>
            <input type="text" class="form-control" @bind-value="contact.FirstName" />
        </div>
        <div class="form-group">
            <label for="LastName"> Last Name</label>
            <input type="text" class="form-control" @bind-value="contact.LastName" />
        </div>
        <div class="form-group">
            <label for="PhoneNumber"> Phone Number</label>
            <input type="text" class="form-control" @bind-value="contact.PhoneNumber" />
        </div>
        <div class="form-group">
            <label for="Address"> Address</label>
            <input type="text" class="form-control" @bind-value="contact.Address" />
        </div>
        <div class="form-group">
            <label for="About"> About me</label>
            <input type="text" class="form-control" @bind-value="contact.About" />
        </div>
        <div class="form-group">
            <label for="Age"> Date of Birth</label>
            <input type="date" class="form-control" @bind-value="contact.Age" />
        </div>
        <div class="form-group">
            <label for="Group"> Group</label>
            <input type="text" class="form-control" @bind-value="contact.Group" />
        </div>
        <div class="form-group">
            <label for="Contactimage">Upload Contact Image</label>
            <BlazorInputFile.InputFile OnChange="HandleFileUpload" />
            @if(!string.IsNullOrWhiteSpace(imageDataUrl))
            {
                <img src="@imageDataUrl" height="100" width="100" />
            }
            else if(!string.IsNullOrEmpty(contact.Image))
            {
                <img src="/uploads/@contact.Image" height="100" width="100"/>
            }
        </div>
        
        <button type="submit" class="btn btn-primary"> Submit</button>
    </EditForm>
}



@code {
    [Parameter]
    public string Id { get; set; }
    private MemoryStream msFile;
    private IFileListEntry file;
    private string imageDataUrl;

    private ContactDto contact = new ContactDto();

    private bool IsSuccess = true;

    protected override async Task OnInitializedAsync()
    {
        string url = StaticEndpoints.GetContactByIdEndpoint;
        int id = Convert.ToInt32(Id);
        contact = await _ContactRepository.GetById(url, id);
    }


    private async Task HandleFileUpload(IFileListEntry[] files)
    {

        file = files.FirstOrDefault();
        if (file != null)
        {
            var name = file.Name;
            msFile = new MemoryStream();
            await file.Data.CopyToAsync(msFile);
            var reader = new StreamReader(file.Data);
            var imageBase64Data = Convert.ToBase64String(msFile.ToArray());
            imageDataUrl = string.Format("data:image/png;base64,{0}", imageBase64Data);
        }
    }

    protected async Task HandleContactCreate()
    {
        IsSuccess = false;
        string url = StaticEndpoints.EditContactEndpoint;
        int id = Convert.ToInt32(Id);
        if (file != null)
        {
            var ext = Path.GetExtension(file.Name);
            var picId = Guid.NewGuid().ToString().Replace("-", "");
            var picName = $"{picId}{ext}";
            _Upload.UploadFile(file,msFile, picName);
            contact.Image = picName;
        }
        IsSuccess = await _ContactRepository.Update(url, id, contact);
        if (IsSuccess)
        {
            _Nav.NavigateTo("/Contact/List");
        }
    }
}
